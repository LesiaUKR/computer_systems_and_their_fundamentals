import asyncio  # Імпортуємо asyncio для роботи з асинхронним програмуванням

# Асинхронна функція, яка симулює завдання і повертає результат


async def my_task():
    """
    Асинхронна функція, яка повертає результат виконання.

    Повертає:
        str: Рядок із результатом виконання завдання.
    """
    return "Результат завдання my_task"  # Повертаємо результат завдання

# Колбек-функція для обробки завершення задачі


def my_callback(task):
    """
    Викликається після завершення асинхронної задачі.

    Аргументи:
        task (asyncio.Task): Об'єкт виконаної асинхронної задачі.
    """
    print("Завдання завершено з результатом:",
          task.result())  # Виводимо результат задачі

# Основна асинхронна функція


async def main():
    """
    Створює асинхронну задачу, додає до неї колбек і чекає завершення.
    """
    # Створюємо асинхронну задачу
    task = asyncio.create_task(my_task())

    # Додаємо колбек, який буде викликано після завершення задачі
    task.add_done_callback(my_callback)

    # Чекаємо завершення задачі і отримуємо її результат
    r = await task
    print(r)  # Виводимо результат виконання задачі

# Основний блок виконання
if __name__ == "__main__":
    """
    Запускає основну асинхронну функцію main за допомогою asyncio.run.
    """
    asyncio.run(main())  # Запускаємо основну функцію
