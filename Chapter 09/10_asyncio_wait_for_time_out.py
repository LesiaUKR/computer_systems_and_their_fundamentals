import asyncio  # Імпортуємо asyncio для роботи з асинхронним програмуванням

# Асинхронна функція, яка симулює тривалу задачу


async def long_running_task():
    """
    Симулює тривалу операцію із затримкою у 5 секунд.

    Повертає:
        str: Результат виконання завдання.
    """
    await asyncio.sleep(5)  # Імітуємо затримку на 5 секунд
    return "Завдання завершено"  # Повертаємо результат після завершення

# Основна асинхронна функція


async def main():
    """
    Виконує довготривалу задачу, обмежуючи її час виконання за допомогою asyncio.wait_for.
    """
    try:
        # Виконуємо long_running_task і чекаємо максимум 3 секунди
        result = await asyncio.wait_for(long_running_task(), timeout=3)
        print(result)  # Якщо завдання завершується вчасно, друкуємо результат
    except asyncio.TimeoutError:
        # Якщо час очікування перевищує 3 секунди, виникає asyncio.TimeoutError
        # Виводимо повідомлення про тайм-аут
        print("Завдання не було завершено вчасно")

# Основний блок виконання
if __name__ == "__main__":
    """
    Запускає основну асинхронну функцію main за допомогою asyncio.run.
    """
    asyncio.run(main())  # Запускаємо основну функцію
